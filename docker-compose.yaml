include:
  #- ./mb-docker/docker-compose.yml


  - ./supabase/docker/docker-compose.yml
services:
  frontend:
    build:
      context: ./frontend/
      target: dev
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/static:/app/static
      - ./frontend/vite.config.ts:/app/vite.config.ts
      - ./frontend/tsconfig.json:/app/tsconfig.json
      - ./frontend/svelte.config.js:/app/svelte.config.js
      - ./frontend/.env.local:/app/.env.local
      - MQP:/data/frontend
    ports:
      - "5173:5173"
      - "24678:24678"
    networks:
      - default
  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
  data-acquisition:
    build:
      context: ./data-acquisition/
      target: dev
    volumes:
      - MQP:/data/data-acquisition
    ports:
      - "3001:3001"
    networks:
      - default
    # develop:
    #   watch:
    #     - action: sync
    #       path: ./data-acquisition/
    #       target: src/
    #       ignore:
    #         - node_modules/
    #     - action: rebuild
    #       path: .
    depends_on:
      db:
        condition: service_healthy
      analytics:
        condition: service_healthy
      redis:
        condition: service_started
    # healthcheck:
    #   test:
    #     [
    #       "CMD",
    #       "node",
    #       "-e",
    #       "require('http').get('http://localhost:3000/api/profile', (r) => {if (r.statusCode !== 200) throw new Error(r.statusCode)})"
    #     ]
    #   timeout: 5s
    #   interval: 5s
    #   retries: 3
    # restart: on-failure
    
    



    # expose:
    #   - "4200"
# networks:
#   frontend:
#     # Specify driver options
#     driver: bridge
#     driver_opts:
#       com.docker.network.bridge.host_binding_ipv4: "127.0.0.1"
#     networks:
#       - frontnet
#       - backnet
# networks:
#   backnet:
#   frontnet:

# networks:
#   default:
#     driver: bridge
  # backend:
  #   build:
  #     context: ./backend/
  #   env_file:
  #     - .env
  #   ports:
  #     - "8080:8080"
  #   volumes:
  #     - MQP:/data/backend
# networks:
#   default:
#     driver: bridge
volumes:
  MQP: